{"version":3,"sources":["components/questions/NewQuestionButton.js","components/questions/QuestionsContext.js","components/questions/QuestionForm.js","components/questions/CustomTextField.js","components/questions/MultipleChoiceResponseForm.js","components/questions/QuestionEditor.js","components/questions/QuestionTabs.js","components/questions/NewQuestionHeader.js","components/sections/SectionContext.js","components/sections/SectionNameField.js","components/sections/SectionDescriptionField.js","components/questions/Question.js","components/sections/SectionQuestions.js","components/sections/Section.js","components/sections/NewSectionButton.js","components/sections/FormSections.js","components/form-header/FormNameFieldDisplay.js","components/form-header/FormNameField.js","components/form-header/FormTitleFieldDisplay.js","components/form-header/FormTitleField.js","components/color-picker/ColorPickerContext.js","components/color-picker/ColorHexBox.js","components/color-picker/ColorHexRow.js","components/color-picker/PrimaryDisplay.js","components/color-picker/SecondaryDisplay.js","components/color-picker/ColorPreviews.js","components/FormContext.js","components/color-picker/CurrentColorDisplay.js","components/color-picker/palette.js","components/color-picker/ColorPickerGrid.js","components/color-picker/ColorPickerGridModal.js","components/color-picker/ColorPicker.js","components/form-header/FormIntroTextFieldDisplay.js","components/form-header/FormIntroTextField.js","components/form-header/FormTranslationsField.js","components/form-header/FormHeader.js","components/Form.js","components/SubdomainCard.js","components/SubdomainList.js","components/FormCard.js","components/NewFormModal.js","components/SubdomainFormList.js","App.js","store/configureStore.js","store/forms.js","index.js"],"names":["NewQuestionButton","createContext","props","Button","style","marginTop","variant","onClick","handleNewQuestion","startIcon","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","QuestionForm","classes","useState","setHeaderSubmit","label","questionLabel","setQuestionLabel","type","setType","display","flexDirection","alignItems","justifyContent","width","onSubmit","e","preventDefault","TextField","fullWidth","autoFocus","placeholder","value","onChange","target","handleInput","FormControl","className","InputLabel","htmlFor","Select","native","event","name","root","padding","marginBottom","input","marginLeft","flex","iconButton","divider","height","CustomTextField","Paper","IconButton","aria-label","InputBase","inputProps","Divider","orientation","color","MultipleChoiceResponseForm","responses","setResponses","newResponseLabel","setNewResponseLabel","useEffect","map","response","index","console","log","responsesEdit","responseEdit","Object","assign","handleEdit","QuestionEditor","TabPanel","children","other","role","hidden","id","aria-labelledby","Box","a11yProps","flexGrow","backgroundColor","palette","background","paper","tabPanel","QuestionTabs","React","setValue","boxShadow","AppBar","position","Tabs","newValue","Tab","NewQuestionHeader","headerSubmit","SectionContext","formTitleText","fontSize","formNameText","helperText","textAlign","formLabelProps","paddingLeft","GreenColorButton","withStyles","paddingRight","outline","RedColorButton","SectionNameField","setEdit","setName","savingForm","setSavingForm","currentName","setCurrentName","sectionId","sectionName","handleSave","useParams","formName","a","csrfToken","Cookies","get","nameObj","section_name","jsonForm","JSON","stringify","fetch","headers","method","body","json","data","section","saveForm","form_name","required","size","shrink","SectionDescriptionField","description","maxWidth","multiline","rows","rowsMax","Infinity","InputLabelProps","FormHelperTextProps","Question","question","edit","question_responses","SectionQuestions","questions","setQuestions","displayNewQuestionHeader","setDisplayNewQuestionHeader","sectionInputProps","Section","NewSectionButton","sectionContext","useContext","creatingSection","setCreatingSection","setSections","sections","createSection","FormSections","loading","setLoading","getSections","CircularProgress","Provider","order","formInputProps","cursor","buttonStyle","fontFamily","borderRadius","transition","Radium","FormNameField","form","fontWeight","formTitle","InputProps","FormTitleField","title","setTitle","currentTitle","setCurrentTitle","titleObj","form_title","ColorPickerContext","ColorHexBox","hex","setHex","colorName","setColorName","setIndex","colorContext","activeColorType","setPrimary","setSecondary","setSelected","selected","ColorHexRow","hexes","setHexes","code","borderTop","PrimaryDisplay","getTextColor","chroma","contrast","textColor","primary","lighterColor","brighten","lighterTextColor","darkerColor","darken","darkerTextColor","setActiveColorType","border","textTransform","SecondaryDisplay","secondary","ColorPreviews","FormContext","CurrentColorDisplay","porps","formContext","colorPickerContext","handleOpen","custom_color_primary","custom_color_secondary","ColorPickerGrid","heading","typography","pxToRem","fontWeightRegular","handleSaveColors","handleClose","modal","shadows","ColorPicker","modalOpen","setModalOpen","colorObj","primary_color","primary_dark","primary_light","secondary_light","secondary_dark","secondary_color","setForm","Modal","open","onClose","BackdropComponent","Backdrop","BackdropProps","timeout","FormIntroTextField","form_intro_text","alignSelf","chips","flexWrap","chip","noLabel","selectInputProps","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","names","langs","getStyles","personName","indexOf","fontWeightMedium","FormTranslationsField","useTheme","setPersonName","labelId","multiple","Input","renderValue","Chip","key","MenuItem","FormHeader","setFormName","setFormTitle","formIntroText","setFormIntroText","primaryColor","setPrimaryColor","secondaryColor","setSecondaryColor","Form","useDispatch","responseData","fetchData","Subdomain","letterSpacing","borderTopLeftRadius","borderTopRightRadius","subdomain","backgroudColor","SubdomainList","subdomains","setSubdomains","useRouteMatch","path","url","subdomainComponents","to","SubdomainCard","FormCard","NewFormModal","setOpen","newFormName","setNewFormName","creatingForm","setCreatingForm","createdForm","setCreatedForm","createForm","subdomain_id","aria-describedby","closeAfterTransition","Fade","in","handleNameInput","SubdomainFormList","forms","setForms","setSubdomain","formList","App","textDecoration","activeclass","exact","storeEnhancer","rootReducer","combineReducers","state","action","newState","applyMiddleware","thunk","initialState","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.484bc20c.chunk.js","sourcesContent":["import { Button } from '@material-ui/core'\nimport React, { useContext } from 'react'\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport QuestionsContext from './QuestionsContext';\n\nconst NewQuestionButton = (props) => {\n    \n    return (\n        <Button \n            style={{marginTop:\"10px\"}}\n            variant={\"outlined\"} \n            onClick={props.handleNewQuestion}\n            startIcon={<AddCircleOutlineOutlinedIcon/>}>\n                Add Question\n        </Button>\n    )\n}\n\nexport default NewQuestionButton;","import { createContext } from 'react';\n\nconst QuestionsContext = createContext();\n\nexport default QuestionsContext;","import { IconButton, TextField } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: \"180px\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst QuestionForm = (props) => {\n    const classes = useStyles()\n    const [headerSubmit,setHeaderSubmit]=useState(false)\n    const [questionLabel,setQuestionLabel] = useState(props.label)\n    const [type,setType]=useState(props.type)\n\n    const handleInput = (e) => {\n        setQuestionLabel(e.target.value)\n    }\n\n    const handleChange = (event) => {\n        const name = event.target.value;\n        setType(name)\n    };\n\n\n    return (\n\n            <div style={{\n                display:\"flex\",\n                flexDirection:\"row\",\n                alignItems:\"center\",\n                justifyContent:\"center\",\n            }}>\n            <form style={{width:\"100%\"}} onSubmit={(e)=>{\n                e.preventDefault()\n                setHeaderSubmit(true)\n                }}>\n            <TextField\n                fullWidth\n                autoFocus\n\n                label=\"Enter your question, select a question type and press `Enter`\"\n                // helperText=\"To create a question, enter the text for your question, select a question type and press `Enter`\"\n                variant=\"filled\"\n                placeholder=\"Enter your question\"\n                value={questionLabel}\n                onChange={(e)=>handleInput(e)}\n            >\n            </TextField>\n            </form>\n            <FormControl variant=\"filled\" className={classes.formControl}>\n                <InputLabel htmlFor=\"filled-age-native-simple\">Type</InputLabel>\n                <Select\n                fullWidth\n                native\n                value={type}\n                onChange={handleChange}\n                >\n                <option value={1}>Multiple Choice</option>\n                <option value={2}>Drop Down</option>\n                <option value={3}>Checkboxes</option>\n                <option value={4}>Radio</option>\n                <option value={5}>File Upload</option>\n                <option value={6}>Short Text</option>\n                <option value={7}>Long Text</option>\n                </Select>\n            </FormControl>\n\n            </div>\n    )\n}\n\nexport default QuestionForm;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 600,\n    marginBottom:\"4px\",\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\nexport default function CustomTextField(props) {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <IconButton className={classes.iconButton} aria-label=\"menu\">\n        <MenuIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Enter response option...\"\n        value={props.value}\n        onChange={props.onChange}\n        inputProps={{ 'aria-label': 'search google maps' }}\n      />\n      {/* <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n        <SearchIcon />\n      </IconButton> */}\n      <Divider className={classes.divider} orientation=\"vertical\" />\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"directions\">\n        <DeleteOutlineIcon />\n      </IconButton>\n    </Paper>\n  );\n}","import { IconButton, TextField } from '@material-ui/core';\nimport React, {useEffect, useState} from 'react'\nimport SaveIcon from '@material-ui/icons/Save';\nimport CustomTextField from './CustomTextField'\nconst MultipleChoiceResponseForm = (props) => {\n    const [responses,setResponses] = useState([])\n    const [newResponseLabel,setNewResponseLabel] = useState(\"\")\n\n    useEffect(()=>{\n        setResponses(props.responses)\n    },[props])\n\n    const handleEdit = (e,index) => {\n        const responsesEdit = [...responses]\n        const responseEdit = Object.assign({},responsesEdit[index])\n        responseEdit.label = e.target.value\n        responsesEdit[index] = responseEdit\n        setResponses(responsesEdit)\n    }\n\n    const handleNewResponse = (e)=>{\n        e.preventDefault()\n        setResponses([...responses,{label:newResponseLabel}])\n        setNewResponseLabel(\"\")\n    }\n\n    return (\n        <div style={{display:\"flex\",flexDirection:\"column\",width:\"100%\"}}>\n            <div style={{display:\"flex\",flexDirection:\"row\",width:\"100%\"}}>\n            <div style={{display:\"flex\",flexDirection:\"column\",width:\"100%\",alignItems:\"center\"}}>\n                {responses.map((response,index)=>{\n                console.log(\"YYEEE\")\n                return (\n                    <CustomTextField value={responses[index].label} onChange={(e)=>handleEdit(e,index)}></CustomTextField>\n                )\n                })}\n            <form style={{width:\"100%\",display:\"flex\",flexDirection:\"row\",justifyContent:\"center\"}} onSubmit={handleNewResponse}>\n            <CustomTextField \n                value={newResponseLabel} \n                onChange={(e)=>setNewResponseLabel(e.target.value)}>\n            </CustomTextField>\n            </form>\n            </div>\n            </div>\n            \n            <div style={{flexDirection:\"row\",display:\"flex\",width:\"100%\"}}>\n                <IconButton>\n                    <SaveIcon></SaveIcon>\n                </IconButton>\n            </div>\n        </div>\n    )\n}\n\nexport default MultipleChoiceResponseForm;","import React, {useState, useEffect} from 'react'\nimport MultipleChoiceResponseForm from './MultipleChoiceResponseForm'\nimport QuestionForm from './QuestionForm'\n\nconst QuestionEditor = (props) => {\n    const [label,setLabel] = useState(props.label)\n    const [type,setType] = useState(props.type)\n    const [responses,setResponses] = useState(props.responses)\n\n    useEffect(()=>{\n        setResponses(props.responses)\n        console.log(\"props\",props.responses)\n    },[props])\n\n    let response;\n    if (type === \"mc\") {\n        response = <MultipleChoiceResponseForm responses={responses}></MultipleChoiceResponseForm>\n    }\n    return (\n        <>\n        <div style={{display:\"flex\",flexDirection:\"column\",width:\"100%\"}}>\n            <QuestionForm type={type} label={label}></QuestionForm>\n            {response}\n        </div>\n\n        </>\n    )\n}\n\nexport default QuestionEditor;","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport QuestionForm from './QuestionForm';\nimport QuestionEditor from './QuestionEditor';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  tabPanel: {\n\n  }\n}));\n\nexport default function QuestionTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [label,setLabel] = useState(props.label)\n  const [type,setType]=useState(props.type)\n  const [responses,setResponses]=useState([])\n\n  useEffect(()=>{\n      setResponses(props.responses)\n      console.log(\"props\",props.responses)\n  },[props])\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  console.log(\"state\",responses)\n\n  return (\n    <div className={classes.root} style={{backgroundColor:\"whitesmoke\",boxShadow: \"rgb(60 64 67 / 30%) 0px 1px 2px 0px, rgb(60 64 67 / 15%) 0px 1px 3px 1px\"}}>\n      <AppBar position=\"static\" color={\"secondary\"}>\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Edit\" {...a11yProps(0)} />\n          <Tab label=\"Logic\" {...a11yProps(1)} />\n          <Tab label=\"Translations\" {...a11yProps(2)}/>\n        </Tabs>\n      </AppBar>\n      <TabPanel style={{padding:\"0px\"}} classes={{className:classes.tabPanel}} value={value} index={0}>\n        <QuestionEditor label={label} type={type} responses={responses}/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        Item Two\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        Item three\n      </TabPanel>\n    </div>\n  );\n}","import { IconButton, TextField } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport QuestionForm from './QuestionForm'\nimport QuestionTabs from './QuestionTabs';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: \"180px\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst NewQuestionHeader = () => {\n    const classes = useStyles()\n\n    const [questionLabel,setQuestionLabel] = useState(\"\")\n    const [headerSubmit,setHeaderSubmit] = useState(false)\n    const [type,setType]=useState(\"mc\")\n\n    const handleInput = (e) => {\n        setQuestionLabel(e.target.value)\n    }\n\n    const handleChange = (event) => {\n        const name = event.target.value;\n        setType(name)\n    };\n\n\n    return (\n\n            <div style={{\n                display:\"flex\",\n                flexDirection:\"row\",\n                alignItems:\"center\",\n                justifyContent:\"center\"\n            }}>\n            {  headerSubmit && questionLabel && type ?\n                <QuestionTabs label={questionLabel} type={type} responses={[]}></QuestionTabs>\n                :\n                <>  \n            <form style={{width:\"100%\"}} onSubmit={(e)=>{\n                e.preventDefault()\n                setHeaderSubmit(true)\n                }}>\n            <TextField\n                fullWidth\n                autoFocus\n                label=\"Enter your question, select a question type and press `Enter`\"\n                // helperText=\"To create a question, enter the text for your question, select a question type and press `Enter`\"\n                variant=\"filled\"\n                placeholder=\"Enter your question\"\n                value={questionLabel}\n                onChange={(e)=>handleInput(e)}\n            >\n            </TextField>\n            </form>\n            <FormControl variant=\"filled\" className={classes.formControl}>\n                <InputLabel htmlFor=\"filled-age-native-simple\">Type</InputLabel>\n                <Select\n                native\n                value={type}\n                onChange={handleChange}\n                >\n                <option value={\"mc\"}>Multiple Choice</option>\n                <option value={2}>Drop Down</option>\n                <option value={3}>Checkboxes</option>\n                <option value={4}>Radio</option>\n                <option value={5}>File Upload</option>\n                <option value={6}>Short Text</option>\n                <option value={7}>Long Text</option>\n                </Select>\n            </FormControl>\n            {\n                headerSubmit \n                ?\n                <></>\n                :\n            <>\n            <IconButton style={{backgroundColor:\"transparent\",color:\"darkgray\"}}>\n                <CloseIcon></CloseIcon>\n            </IconButton>\n            <IconButton style={{backgroundColor:\"yellowgreen\",color:\"white\"}}>\n                <CheckIcon></CheckIcon>\n            </IconButton>\n            </>\n            }\n            </>\n            }\n            </div>\n    )\n}\n\nexport default NewQuestionHeader;","import { createContext } from 'react';\n\nconst SectionContext = createContext();\n\nexport default SectionContext;","import { Button, TextField } from '@material-ui/core';\nimport { Grid, Container, Card, InputBase, CircularProgress, Input, TextareaAutosize } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router';\nimport Cookies from 'js-cookie'\n\nconst useStyles = makeStyles((theme) => ({\n    formTitleText: {\n      fontSize:\"38px\"\n    },\n    formNameText: {\n      padding: theme.spacing(1),\n    },\n    helperText: {\n        textAlign:\"center\",\n    },\n    formLabelProps:{\n        paddingLeft:\"10px\"\n    }\n  }));\n\nconst GreenColorButton = withStyles((theme) => ({\nroot: {\n    color: \"white\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n    outline:\"none\",\n    margin: \"4px\",\n    backgroundColor:\"#a9a9a9\",\n    '&:hover': {\n        backgroundColor: \"yellowgreen !important\",\n    }\n},\n}))(Button);\n\nconst RedColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        outline:\"none\",\n        margin: \"4px\",\n        backgroundColor:\"#a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"tomato !important\",\n        }\n    },\n    }))(Button);\n\n\nexport default function SectionNameField(props) {\n    const classes = useStyles();\n    const [edit,setEdit]=useState(false)\n    const [name,setName] = useState(\"\")\n    const [formName,setFormName] = useState(\"\")\n    const [savingForm,setSavingForm] =useState(false)\n    const [currentName,setCurrentName] = useState(\"\")\n    const [sectionId,setSectionId] = useState(props.sectionId)\n\n    useEffect(()=>{\n        setName(props.sectionName)\n        setCurrentName(props.sectionName)\n    },[props])\n\n    const handleSave = () => {\n        setSavingForm(true)\n    }\n\n    const handleCancel = () => {\n        setName(currentName)\n        setEdit(false)\n    }\n\n    const {id} = useParams()\n\n    useEffect(() => {\n        const saveForm = async (formName) => {\n            const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n            const nameObj = {section_name:name}\n            const jsonForm = JSON.stringify(nameObj)\n            const response = await fetch(`/api/sections/update-name/${sectionId}`,{\n                headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": csrfToken,\n                },\n                method:\"PATCH\",\n                body: jsonForm\n            })\n            const data = await response.json();\n            setCurrentName(data.section.name)\n            setSavingForm(false)\n            // setCreatedForm(data.form)\n      }\n      if (savingForm) {\n        saveForm({form_name:name})\n      }\n    }\n  ,[savingForm])\n\n    return (\n        <>\n            <div className={\"form-field\"} style={{display:'flex',flexDirection:'row'}}>\n                <form onSubmit={(e)=>{\n                    e.preventDefault()\n                    handleSave()\n                    }\n                }>\n                <TextField  \n                    autoFocus \n                    required\n                    size=\"small\"\n                    onChange={(e)=>setName(e.target.value)} \n                    value={name}\n                    label=\"Section Name\"\n                    placeholder=\"Enter a name for this section...\"\n                    helperText=\"Section names ar optional and will appear at the top of each form section\"\n                    size=\"small\"\n                    style={{paddingLeft:\"10px\"}}\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                        className:classes.formLabelProps\n                    }}\n                    FormHelperTextProps={{\n                            className: classes.helperText\n                                    }}\n                />\n                {\n                    name === currentName \n                    ?\n                    <></>\n                    :\n                    <div style={{display:'flex',flexDirection:'row',justifyContent:\"flex-end\"}}>\n                    <GreenColorButton fullWidth={false} onClick={handleSave}>\n                        save\n                    </GreenColorButton>\n                    <RedColorButton fullWidth={false} onClick={handleCancel}>\n                        cancel\n                    </RedColorButton>\n                </div>}\n                </form>\n            </div>\n        </>\n    )\n}","import { Button, TextField } from '@material-ui/core';\nimport { Grid, Container, Card, InputBase, CircularProgress, Input, TextareaAutosize } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router';\nimport Cookies from 'js-cookie'\n\nconst useStyles = makeStyles((theme) => ({\n    formTitleText: {\n      fontSize:\"38px\"\n    },\n    formNameText: {\n      padding: theme.spacing(1),\n    },\n    helperText: {\n        textAlign:\"center\",\n    },\n    formLabelProps:{\n        paddingLeft:\"10px\"\n    }\n  }));\n\nconst GreenColorButton = withStyles((theme) => ({\nroot: {\n    color: \"white\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n    outline:\"none\",\n    margin: \"4px\",\n    backgroundColor:\"#a9a9a9\",\n    '&:hover': {\n        backgroundColor: \"yellowgreen !important\",\n    }\n},\n}))(Button);\n\nconst RedColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        outline:\"none\",\n        margin: \"4px\",\n        backgroundColor:\"#a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"tomato !important\",\n        }\n    },\n    }))(Button);\n\n\nexport default function SectionDescriptionField(props) {\n    const classes = useStyles();\n    const [edit,setEdit]=useState(false)\n    const [name,setName] = useState(\"\")\n    const [formName,setFormName] = useState(\"\")\n    const [savingForm,setSavingForm] =useState(false)\n    const [currentName,setCurrentName] = useState(\"\")\n    const [sectionId,setSectionId] = useState(props.sectionId)\n    const [description,setDescription]=useState(props.description)\n\n    useEffect(()=>{\n        setName(props.description)\n        setCurrentName(props.description)\n    },[props])\n\n    const handleSave = () => {\n        setSavingForm(true)\n    }\n\n    const handleCancel = () => {\n        setName(currentName)\n        setEdit(false)\n    }\n\n    const {id} = useParams()\n\n    useEffect(() => {\n        const saveForm = async (formName) => {\n            const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n            const nameObj = {description:name}\n            const jsonForm = JSON.stringify(nameObj)\n            const response = await fetch(`/api/sections/update-description/${sectionId}`,{\n                headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": csrfToken,\n                },\n                method:\"PATCH\",\n                body: jsonForm\n            })\n            const data = await response.json();\n            setCurrentName(data.section.description)\n            setSavingForm(false)\n            // setCreatedForm(data.form)\n      }\n      if (savingForm) {\n        saveForm({form_name:name})\n      }\n    }\n  ,[savingForm])\n\n    return (\n        <>\n            <div className={'form-field'} style={{display:'flex',flexDirection:'row',justifyContent:\"center\"}}>\n                <form \n                    style={{width:\"100%\",maxWidth:\"750px\"}}\n                    onSubmit={(e)=>{\n                    e.preventDefault()\n                    handleSave()\n                    }}\n                    >\n                <TextField \n                    required={false}\n                    multiline\n                    fullWidth\n                    rows={1}\n                    variant={\"outlined\"}\n                    rowsMax={Infinity}\n                    onChange={(e)=>setName(e.target.value)} \n                    value={name}\n                    label=\"Section Description\"\n                    placeholder=\"Enter a desctiption for this section\"\n                    helperText=\"This optional text will appear at the beginning of this section\"\n                    size=\"small\"\n                    style={{paddingLeft:\"10px\",paddingRight:\"10px\"}}\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                        className:classes.formLabelProps\n                    }}\n                    FormHelperTextProps={{\n                            className: classes.helperText\n                                    }}\n                />\n                {\n                    currentName === name\n                    ?\n                    <></>\n                    :\n                    <div style={{display:'flex',flexDirection:'row',justifyContent:\"flex-end\"}}>\n                    <GreenColorButton fullWidth={false} onClick={handleSave}>\n                        save\n                    </GreenColorButton>\n                    <RedColorButton fullWidth={false} onClick={handleCancel}>\n                        cancel\n                    </RedColorButton>\n                </div>}\n                </form>\n            </div>\n        </>\n    )\n}","import React, { useState } from 'react'\nimport QuestionTabs from './QuestionTabs'\n\nconst Question = (props) => {\n    const [question,setQuestion] = useState(props.question)\n    const [index, setIndex] = useState(props.index)\n    // if (question !== props.question) setQuestion(props.question)\n    const [edit,setEdit]= useState(false)\n    return (\n        <>\n        {!edit \n        ?\n        <div onClick={()=>setEdit(true)} style={{padding:\"10px\"}} className=\"form-field\">\n            <div style={{display:\"flex\",flexDirection:\"row\"}}>\n                <span>{index + 1}.</span>\n                <span style={{marginLeft:\"4px\"}}>{question.label}</span>\n                </div>\n        </div>\n        :\n        <QuestionTabs label={question.label} type={question.type} responses={question.question_responses}></QuestionTabs>\n        }\n        </>\n    )\n}\n\nexport default Question;","import React, { useState } from 'react'\nimport NewQuestionButton from '../questions/NewQuestionButton'\nimport NewQuestionHeader from '../questions/NewQuestionHeader'\nimport Question from '../questions/Question'\n\nconst SectionQuestions = (props) => {\n    const [questions,setQuestions] = useState(props.questions)\n    const [displayNewQuestionHeader,setDisplayNewQuestionHeader] = useState(false)\n\n    const handleNewQuestion = () => {\n        setDisplayNewQuestionHeader(true)\n    }\n    return (\n        <>\n            {questions.map((question,index)=>{\n                return (\n                    <Question question={question} index={index}></Question>\n                )\n            })}\n\n            {\n                displayNewQuestionHeader \n                ?\n                <NewQuestionHeader></NewQuestionHeader>\n                :\n                <NewQuestionButton \n                    questions={questions} \n                    setQuestions={setQuestions}\n                    handleNewQuestion={handleNewQuestion}\n                ></NewQuestionButton>\n            }\n        </>\n    )\n}\n\nexport default SectionQuestions;","import { Button, Divider, IconButton, TextField } from '@material-ui/core'\nimport React, {useState} from 'react'\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SectionNameField from './SectionNameField';\nimport SectionDescriptionField from './SectionDescriptionField';\nimport SectionQuestions from './SectionQuestions';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formTitleText: {\n        fontSize:\"38px\"\n    },\n    formNameText: {\n      padding: theme.spacing(1),\n    },\n    helperText: {\n        textAlign:\"center\",\n    },\n    formLabelProps:{\n        paddingLeft:\"10px\"\n    },\n    sectionInputProps:{\n        fontSize:\"24px\"\n    }\n  }));\n\nconst Section = (props) => {\n    const classes = useStyles()\n    const [name,setName] = useState(props.name)\n    const [description,setDescription] = useState(props.description)\n    const [sectionId,setSectionId] = useState(props.id)\n    const [questions,setQuestions] = useState(props.questions)\n\n    return (\n        <div \n            className={\"form-question-section\"}\n            style={{\n            width:\"100%\",\n            display:\"flex\",\n            flexDirection:\"column\",\n        }}>\n            <SectionNameField sectionName={name} sectionId={sectionId}></SectionNameField>\n            <SectionDescriptionField sectionId={sectionId} description={description}></SectionDescriptionField>\n            <SectionQuestions questions={questions}></SectionQuestions>\n        </div>\n    )\n}\n\nexport default Section;","import { Button } from '@material-ui/core'\nimport React, { useContext, useEffect, useState } from 'react'\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport SectionContext from './SectionContext';\nimport Section from './Section';\nimport { useParams } from 'react-router';\nimport Cookies from 'js-cookie'\n\n\nconst NewSectionButton = () => {\n    const sectionContext = useContext(SectionContext)\n    const [creatingSection,setCreatingSection]=useState(false)\n    const handleNewSection = () => {\n        setCreatingSection(true)\n    }\n\n    const {id} = useParams()\n\n    useEffect(()=>{\n        const createSection = async () => {\n            const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n            const response = await fetch(`/api/sections/create/${id}`,\n                {\n                    method:\"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"X-CSRF-TOKEN\": csrfToken,\n                    }\n                }\n            )\n            const data = await response.json()\n            console.log(data)\n            sectionContext.setSections([\n                ...sectionContext.sections,\n                data.section\n            ])\n            setCreatingSection(false)\n        }\n        if (creatingSection) {\n            createSection()\n        }\n    },[creatingSection])\n    return (\n        <Button\n            startIcon={<AddCircleOutlineOutlinedIcon/>}\n            onClick={handleNewSection}\n        >\n            New Section \n        </Button>\n    )\n}\n\nexport default NewSectionButton;","import { CircularProgress } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport NewSectionButton from './NewSectionButton'\nimport Section from './Section'\nimport SectionContext from './SectionContext'\n\n\nconst FormSections = () =>{\n    const [sections,setSections] = useState([])\n    const {id} = useParams()\n    const [loading,setLoading] =useState(true)\n\n    useEffect(()=>{\n        const getSections = async (id) => {\n            const response = await fetch(`/api/sections/form/${id}`)\n            const data = await response.json();\n            console.log(data.sections)\n            setSections(data.sections)\n            setLoading(false)\n        }\n        getSections(id)\n    },[])\n\n    if (loading) return <CircularProgress/>\n\n    return (\n        <>\n        <SectionContext.Provider value={{setSections,sections}}>\n                { sections.map((section,index)=>{\n                    return (\n                        <Section name={section.name} id={section.id} description={section.description} index={index} questions={section.questions} order={section.order}></Section>\n                    )\n                })\n            }\n            <NewSectionButton></NewSectionButton>\n        </SectionContext.Provider>\n        </>\n    )\n}\n\nexport default FormSections;","import React, { useEffect,useState } from 'react'\nimport Radium from 'radium'\nimport { TextField } from '@material-ui/core'\nimport { Grid, Container, Card, InputBase, CircularProgress, Input, TextareaAutosize } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    formTitleText: {\n      fontSize:\"38px\"\n    },\n    formNameText: {\n      padding: theme.spacing(1),\n    },\n    helperText: {\n        textAlign:\"center\",\n    },\n    formLabelProps:{\n        paddingLeft:\"10px\"\n    },\n    formInputProps:{\n        cursor:\"pointer\"\n    }\n  }));\n\nconst buttonStyle = {\n    fontFamily:\"Google Sans,Roboto,Arial,sans-serif\",\n    display:\"flex\",\n    flexDirection:\"row\",\n    borderRadius:\"4px\",\n    cursor:\"pointer\",\n    alignItems:\"center\",\n    transition:\".2s\",\n    transition:\"border 280ms  cubic-bezier(.4,0,.2,1) ,box-shadow 280ms cubic-bezier(.4,0,.2,1),background-color 280ms cubic-bezier(.4,0,.2,1)\",\n    // boxShadow:\"rgb(0 0 0 / 13%) 0px 3.2px 7.2px 0px, rgb(0 0 0 / 11%) 0px 0.6px 1.8px 0px\",\n    // boxShadow:\"rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px\",\n    backgroundColor:\"white\",\n    // backgroundImage:\"linear-gradient(to bottom, #ff6e7f 0%, white 100%)\",\n    ':hover':{\n        // backgroundColor:\"gainsboro\",\n        // boxShadow:\"0 1px 3px 0 rgb(60 64 67 / 30%), 0 4px 8px 3px rgb(60 64 67 / 15%)\",\n        backgroundColor:\"whitesmoke\"\n        // transform:\"scale(1.02)\",\n        // boxShadow:\"rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px\",\n    }\n}\n\n\nconst RadiumFormNameField = ({formName,handleEdit}) => {\n    const classes = useStyles()\n        return (\n        <div style={buttonStyle} onClick={handleEdit}>\n            {/* <div>\n                {formName ? formName : \"\"}\n            </div> */}\n            <TextField  \n                    required\n                    value={formName}\n                    label=\"Form Name\"\n                    size=\"small\"\n                    placeholder=\"Enter a name for your form...\"\n                    helperText=\"This should be fairly short but also descriptive. Forms are displayed by their form name along other forms in drop-down menus and other lists.\"\n                    size=\"small\"\n                    style={{paddingLeft:\"10px\"}}\n                    margin=\"normal\"\n                    InputProps={{\n                        className:classes.formInputProps\n                    }}\n                    InputLabelProps={{\n                        shrink: true,\n                        className:classes.formLabelProps\n                    }}\n                    FormHelperTextProps={{\n                            className: classes.helperText\n                                    }}\n                />\n        </div>\n    )\n}\n\nconst FormNameFieldDisplay = Radium(RadiumFormNameField);\n\nexport default FormNameFieldDisplay","import { Button, TextField } from '@material-ui/core';\nimport { Grid, Container, Card, InputBase, CircularProgress, Input, TextareaAutosize } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router';\nimport FormNameFieldDisplay from './FormNameFieldDisplay';\nimport Cookies from 'js-cookie'\n\nconst useStyles = makeStyles((theme) => ({\n    formTitleText: {\n      fontSize:\"38px\"\n    },\n    formNameText: {\n      padding: theme.spacing(1),\n    },\n    helperText: {\n        textAlign:\"center\",\n    },\n    formLabelProps:{\n        paddingLeft:\"10px\"\n    }\n  }));\n\nconst GreenColorButton = withStyles((theme) => ({\nroot: {\n    color: \"white\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n    outline:\"none\",\n    margin: \"4px\",\n    backgroundColor:\"#a9a9a9\",\n    '&:hover': {\n        backgroundColor: \"yellowgreen !important\",\n    }\n},\n}))(Button);\n\nconst RedColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        outline:\"none\",\n        margin: \"4px\",\n        backgroundColor:\"#a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"tomato !important\",\n        }\n    },\n    }))(Button);\n\n\nexport default function FormNameField(props) {\n    const classes = useStyles();\n    const [edit,setEdit]=useState(false)\n    const [name,setName] = useState(\"\")\n    const [formName,setFormName] = useState(\"\")\n    const [savingForm,setSavingForm] =useState(false)\n    const [currentName,setCurrentName] = useState(\"\")\n\n    useEffect(()=>{\n        setName(props.formName)\n        setCurrentName(props.formName)\n    },[props])\n\n    const handleSave = () => {\n        setSavingForm(true)\n    }\n\n    const handleCancel = () => {\n        setName(currentName)\n        setEdit(false)\n    }\n\n    const {id} = useParams()\n\n    useEffect(() => {\n        const saveForm = async (formName) => {\n            const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n            const nameObj = {form_name:name}\n            const jsonForm = JSON.stringify(nameObj)\n            const response = await fetch(`/api/forms/update-form-name/${id}`,{\n                headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": csrfToken,\n                },\n                method:\"PATCH\",\n                body: jsonForm\n            })\n            const data = await response.json();\n            setSavingForm(false)\n            setCurrentName(data.form.form_name)\n            // setCreatedForm(data.form)\n      }\n      if (savingForm) {\n        saveForm({form_name:name})\n      }\n    }\n  ,[savingForm])\n\n    return (\n        <>\n            <div className={\"form-field\"} style={{display:'flex',flexDirection:'row'}}>\n                <form onSubmit={(e)=>{\n                    e.preventDefault()\n                    handleSave()\n                    }\n                }>\n                <TextField  \n                    required\n                    size=\"small\"\n                    onChange={(e)=>setName(e.target.value)} \n                    value={name}\n                    label=\"Form Name\"\n                    placeholder=\"Enter a name for your form...\"\n                    helperText=\"This should be fairly short but also descriptive. Forms are displayed by their form name along other forms in drop-down menus and other lists.\"\n                    size=\"small\"\n                    style={{paddingLeft:\"10px\"}}\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                        className:classes.formLabelProps\n                    }}\n                    FormHelperTextProps={{\n                            className: classes.helperText\n                                    }}\n                />\n                {\n                    currentName === name \n                    ? \n                    <></>\n                    :   \n                <div style={{display:'flex',flexDirection:'row',justifyContent:\"flex-end\"}}>\n                    <GreenColorButton fullWidth={false} onClick={handleSave}>\n                        save\n                    </GreenColorButton>\n                    <RedColorButton fullWidth={false} onClick={handleCancel}>\n                        cancel\n                    </RedColorButton>\n                </div>\n                }\n                </form>\n            </div>\n        </>\n    )\n}","import Radium from 'radium'\nimport { Button, TextField } from '@material-ui/core';\nimport { Grid, Container, Card, InputBase, CircularProgress, Input, TextareaAutosize } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router';\nimport FormNameFieldDisplay from './FormNameFieldDisplay';\nimport Cookies from 'js-cookie'\nimport FormTitileFieldDisplay from './FormTitleFieldDisplay';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formTitleText: {\n      fontSize:\"38px\"\n    },\n    formNameText: {\n      padding: theme.spacing(1),\n    },\n    helperText: {\n        textAlign:\"center\",\n    },\n    inputProps: {\n        fontSize:\"38px\",\n        fontWeight:\"lighter\"\n    }\n  }));\n\n\nconst buttonStyle = {\n    fontFamily:\"Google Sans,Roboto,Arial,sans-serif\",\n    display:\"flex\",\n    flexDirection:\"row\",\n    borderRadius:\"4px\",\n    cursor:\"pointer\",\n    alignItems:\"center\",\n    transition:\".2s\",\n    transition:\"border 280ms  cubic-bezier(.4,0,.2,1) ,box-shadow 280ms cubic-bezier(.4,0,.2,1),background-color 280ms cubic-bezier(.4,0,.2,1)\",\n    // boxShadow:\"rgb(0 0 0 / 13%) 0px 3.2px 7.2px 0px, rgb(0 0 0 / 11%) 0px 0.6px 1.8px 0px\",\n    // boxShadow:\"rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px\",\n    backgroundColor:\"white\",\n    // backgroundImage:\"linear-gradient(to bottom, #ff6e7f 0%, white 100%)\",\n    ':hover':{\n        backgroundColor:\"whitesmoke\",\n        // boxShadow:\"0 1px 3px 0 rgb(60 64 67 / 30%), 0 4px 8px 3px rgb(60 64 67 / 15%)\",\n\n        // transform:\"scale(1.02)\",\n        // boxShadow:\"rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px\",\n    }\n}\n\n\nconst RadiumFormTitleField = ({formTitle,handleEdit}) => {\n    const classes = useStyles();\n        return (\n        <div style={buttonStyle} onClick={handleEdit}>\n            <div style={{fontWeight:500,width:\"100%\",paddingLeft:\"10px\",paddingRight:\"10px\",fontFamily:\"'Source Sans Pro', \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif !important\",fontSize:\"32px\"}}>\n                <TextField \n                    required\n                    fullWidth\n                    value={formTitle}\n                    label=\"Form Title\"\n                    placeholder=\"Enter a title for your form...\"\n                    helperText=\"This can be the same as the form name, or a slightly longer version. Form titles appear at the top of a form when the form is open.\"\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    InputProps={{\n                        className: classes.inputProps\n                    }}\n                    FormHelperTextProps={{\n                            className: classes.helperText\n                                    }}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst FormTitleFieldDisplay = Radium(RadiumFormTitleField);\n\nexport default FormTitleFieldDisplay","import { Button, TextField } from '@material-ui/core';\nimport { Grid, Container, Card, InputBase, CircularProgress, Input, TextareaAutosize } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router';\nimport FormNameFieldDisplay from './FormNameFieldDisplay';\nimport Cookies from 'js-cookie'\nimport FormTitileFieldDisplay from './FormTitleFieldDisplay';\n\nconst useStyles = makeStyles((theme) => ({\n    formTitleText: {\n      fontSize:\"38px\"\n    },\n    formNameText: {\n      padding: theme.spacing(1),\n    },\n    helperText: {\n        textAlign:\"center\",\n    },\n    inputProps: {\n        fontSize:\"38px\",\n        fontWeight:\"lighter\"\n    }\n  }));\n\nconst GreenColorButton = withStyles((theme) => ({\nroot: {\n    color: \"white\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n    outline:\"none\",\n    margin: \"4px\",\n    backgroundColor:\"#a9a9a9\",\n    '&:hover': {\n        backgroundColor: \"yellowgreen !important\",\n    }\n},\n}))(Button);\n\nconst RedColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        outline:\"none\",\n        margin: \"4px\",\n        backgroundColor:\"#a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"tomato !important\",\n        }\n    },\n    }))(Button);\n\n\nexport default function FormTitleField(props) {\n    const classes = useStyles();\n    const [edit,setEdit]=useState(false)\n    const [title,setTitle] = useState(\"\")\n    const [savingForm,setSavingForm] =useState(false)\n    const [currentTitle,setCurrentTitle] = useState(\"\")\n\n    useEffect(()=>{\n        setTitle(props.formTitle)\n        setCurrentTitle(props.formTitle)\n    },[props])\n\n    const handleSave = () => {\n        setSavingForm(true)\n    }\n\n    const handleCancel = () => {\n        setTitle(currentTitle)\n        setEdit(false)\n    }\n\n    const handleEdit = () => {\n        setCurrentTitle(title)\n        setEdit(true)\n    }\n\n    const {id} = useParams()\n\n    useEffect(() => {\n        const saveForm = async (formName) => {\n            const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n            const titleObj = {form_title:title}\n            const jsonForm = JSON.stringify(titleObj)\n            const response = await fetch(`/api/forms/update-form-title/${id}`,{\n                headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": csrfToken,\n                },\n                method:\"PATCH\",\n                body: jsonForm\n            })\n            const data = await response.json();\n            setSavingForm(false)\n            setCurrentTitle(data.form.form_title)\n            // setCreatedForm(data.form)\n      }\n      if (savingForm) {\n        saveForm({form_title:title})\n      }\n    }\n  ,[savingForm])\n\n    return (\n        <>\n            <div className={\"form-field\"} style={{display:'flex',flexDirection:'column'}}>\n                <form \n                    style={{\n                        paddingLeft:\"10px\",\n                        paddingRight:\"10px\"\n                    }}\n                    onSubmit={(e)=>{\n                    e.preventDefault()\n                    handleSave()\n                    }\n                }>\n                <TextField \n                    fullWidth\n                    autoFocus \n                    required\n                    onChange={(e)=>setTitle(e.target.value)} \n                    value={title}\n                    size=\"medium\"\n                    label=\"Form Title\"\n                    placeholder=\"Enter a title for your form...\"\n                    helperText=\"This can be the same as the form name, or a slightly longer version. Form titles appear at the top of a form when the form is open.\"\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    InputProps={{\n                        className: classes.inputProps\n                    }}\n                    FormHelperTextProps={{\n                            className: classes.helperText\n                                    }}\n                />\n                { currentTitle === title \n                ? \n                <></>\n                :\n                <div style={{display:'flex',flexDirection:'row',justifyContent:\"flex-end\",paddingRight:\"6.48px\"}}>\n                    <GreenColorButton fullWidth={false} onClick={handleSave}>\n                        save\n                    </GreenColorButton>\n                    <RedColorButton fullWidth={false} onClick={handleCancel}>\n                        cancel\n                    </RedColorButton>\n                </div>}\n                </form>\n            </div>\n        </>\n    )\n}","import { createContext } from 'react';\n\nconst ColorPickerContext = createContext();\n\nexport default ColorPickerContext;","import React, {useState,useEffect, useContext} from 'react'\nimport ColorPickerContext from './ColorPickerContext'\nimport CheckIcon from '@material-ui/icons/Check';\n\nconst ColorHexBox = (props) => {\n    const [hex,setHex] = useState(props.hex)\n    if (hex !== props.hex) setHex(props.hex)\n    const [colorName,setColorName] = useState(props.colorName)\n    if (colorName !== props.colorName) setColorName(props.colorName)\n    const [index,setIndex] = useState(props.index)\n    if (index !== props.index) setIndex(props.index)\n\n    const colorContext = useContext(ColorPickerContext)\n    \n    const handleClick = () => {\n        if (colorContext.activeColorType === \"primary\") colorContext.setPrimary(hex)\n        if (colorContext.activeColorType === \"secondary\") colorContext.setSecondary(hex)\n        colorContext.setSelected({index,colorName})\n    }\n\n    return (\n        <div \n            className={\"hex-box\"} \n            onClick={handleClick}\n            style={{\n                height:\"32px\",\n                minWidth:\"32px\",\n                backgroundColor:hex,\n                display:\"flex\",\n                borderRadius:colorContext.selected.index === index && colorContext.selected.colorName === colorName ? \"50%\" : \"\"\n            }}>\n            {\n                colorContext.selected.index === index && colorContext.selected.colorName === colorName\n                ?\n                <CheckIcon style={{margin:\"auto\", color:\"white\"}}></CheckIcon>\n                :\n                <></>\n            }\n        </div>\n    )\n}\n\nexport default ColorHexBox","import React, { useEffect,useState } from 'react'\nimport ColorHexBox from './ColorHexBox'\n\nconst ColorHexRow = (props) => {\n    const [hexes,setHexes]=useState([])\n    const [colorName,setColorName] = useState(props.colorName)\n    if (colorName !== props.colorName) setColorName(props.colorName)\n    useEffect(()=>{\n        setHexes(props.hexes.map((hex,index)=>{\n            return {code:hex,index}\n        }))\n    },[props])\n    return (\n        <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",borderTop:\"1px solid #E0E0E0\"}}>\n            <div style={{paddingLeft:\"8px\",minWidth:\"80px\",fontSize:\"12px\",color:\"#616161\"}}>{colorName}</div>\n            {hexes.map(hex=>{\n                return (\n                    <ColorHexBox hex={hex.code} index={hex.index} colorName={colorName}>\n                        <></>\n                    </ColorHexBox>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ColorHexRow;","import chroma from 'chroma-js';\nimport React, { useContext } from 'react'\nimport ColorPickerContext from './ColorPickerContext';\n\nconst PrimaryDisplay = () => {\n    const colorContext = useContext(ColorPickerContext)\n    const handleClick = () => {\n        colorContext.setActiveColorType(\"primary\")\n    }\n\n    const getTextColor = (hex) => {\n        const whiteContrastScore = chroma.contrast(hex,\"#FFFFFF\")\n        if (whiteContrastScore >= 4.5) {\n            return 'white'\n        } else {\n            return 'black'\n        }\n    }\n\n    const textColor = getTextColor(colorContext.primary)\n    const lighterColor = chroma(colorContext.primary).brighten().hex()\n    const lighterTextColor = getTextColor(lighterColor)\n    const darkerColor = chroma(colorContext.primary).darken().hex()\n    const darkerTextColor = getTextColor(darkerColor)\n\n    return (\n        <div \n            onClick={handleClick}\n            style={{\n                width:\"200px\",\n                height:\"350px\",\n                margin:\"5px\",\n                padding:\"16px\",\n                display:\"flex\",\n                flexDirection:\"column\",\n                boxShadow:colorContext.activeColorType === \"primary\" ? \"0 5px 5px -3px rgb(0 0 0 / 20%), 0 8px 10px 1px rgb(0 0 0 / 14%), 0 3px 14px 2px rgb(0 0 0 / 12%)\" : \"\"\n            }}>\n            <span style={{color:\"#616161\",fontSize:\"16px\",padding:\"8px\"}}>Primary</span>\n            <div style={{\n                width:\"180px\",\n                border: colorContext.primary === \"#FFFFFF\" ?  \"1px solid grey\" : \"\",\n                height:\"170px\",\n                backgroundColor:colorContext.primary ? colorContext.primary : \"white\",\n                margin:\"auto\",\n                marginBottom:\"0px\",\n                padding:\"10px\"\n            }}>\n                <span style={{fontFamily:\"Roboto\",color:textColor,fontWeight:\"700\",fontSize:\"18px\",textTransform:\"lowercase\"}}>{colorContext.primary}</span>\n            </div>\n            <div style={{display:\"flex\",flexDirection:\"row\",marginTop:\"0px\"}}>\n                <div style={{\n                    width:\"90px\",\n                    height:\"100px\",\n                    backgroundColor:lighterColor,\n                    margin:\"auto\",\n                    marginBottom:\"0px\",\n                    padding:\"10px\",\n                    display:\"flex\",\n                    flexDirection:\"column\"\n                }}>\n                    <span style={{fontFamily:\"Roboto\",color:lighterTextColor,fontSize:\"14px\"}}>P - Light</span>\n                    <span style={{fontFamily:\"Roboto\",color:lighterTextColor,fontWeight:\"700\",fontSize:\"18px\",textTransform:\"lowercase\"}}>{chroma(colorContext.primary).brighten().hex()}</span>\n                </div>\n                <div style={{\n                    width:\"90px\",\n                    height:\"100px\",\n                    backgroundColor:darkerColor,\n                    margin:\"auto\",\n                    marginBottom:\"0px\",\n                    padding:\"10px\",\n                    display:\"flex\",\n                    flexDirection:\"column\"\n                }}>\n                    <span style={{fontFamily:\"Roboto\",color:darkerTextColor,fontSize:\"14px\"}}>P - Dark</span>\n                    <span style={{fontFamily:\"Roboto\",color:darkerTextColor,fontWeight:\"700\",fontSize:\"18px\",textTransform:\"lowercase\"}}>{chroma(colorContext.primary).darken().hex()}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PrimaryDisplay;","import chroma from 'chroma-js';\nimport React, { useContext } from 'react'\nimport ColorPickerContext from './ColorPickerContext';\n\nconst SecondaryDisplay = () => {\n    const colorContext = useContext(ColorPickerContext)\n    const handleClick = () => {\n        colorContext.setActiveColorType(\"secondary\")\n    }\n\n    const getTextColor = (hex) => {\n        const whiteContrastScore = chroma.contrast(hex,\"#FFFFFF\")\n        if (whiteContrastScore >= 4.5) {\n            return 'white'\n        } else {\n            return 'black'\n        }\n    }\n\n    const textColor = getTextColor(colorContext.secondary)\n    const lighterColor = chroma(colorContext.secondary).brighten().hex()\n    const lighterTextColor = getTextColor(lighterColor)\n    const darkerColor = chroma(colorContext.secondary).darken().hex()\n    const darkerTextColor = getTextColor(darkerColor)\n\n    return (\n        <div \n            onClick={handleClick}\n            style={{\n                width:\"200px\",\n                margin:\"5px\",\n                height:\"350px\",\n                padding:\"16px\",\n                display:\"flex\",\n                flexDirection:\"column\",\n                boxShadow:colorContext.activeColorType === \"secondary\" ? \"0 5px 5px -3px rgb(0 0 0 / 20%), 0 8px 10px 1px rgb(0 0 0 / 14%), 0 3px 14px 2px rgb(0 0 0 / 12%)\" : \"\"\n            }}>\n            <span style={{color:\"#616161\",fontSize:\"16px\",padding:\"8px\"}}>Secondary</span>\n            <div style={{\n                width:\"180px\",\n                height:\"170px\",\n                backgroundColor:colorContext.secondary ? colorContext.secondary : \"white\",\n                margin:\"auto\",\n                marginBottom:\"0px\",\n                padding:\"10px\"\n            }}>\n                <span style={{fontFamily:\"Roboto\",color:textColor,fontWeight:\"700\",fontSize:\"18px\",textTransform:\"lowercase\"}}>{colorContext.secondary}</span>\n            </div>\n            <div style={{display:\"flex\",flexDirection:\"row\",marginTop:\"0px\"}}>\n                <div style={{\n                    width:\"90px\",\n                    height:\"100px\",\n                    backgroundColor:lighterColor,\n                    margin:\"auto\",\n                    marginBottom:\"0px\",\n                    padding:\"10px\",\n                    display:\"flex\",\n                    flexDirection:\"column\"\n                }}>\n                    <span style={{fontFamily:\"Roboto\",color:lighterTextColor,fontSize:\"14px\"}}>S - Light</span>\n                    <span style={{fontFamily:\"Roboto\",color:lighterTextColor,fontWeight:\"700\",fontSize:\"18px\",textTransform:\"lowercase\"}}>{lighterColor}</span>\n                </div>\n                <div style={{\n                    width:\"90px\",\n                    height:\"100px\",\n                    backgroundColor:darkerColor,\n                    margin:\"auto\",\n                    marginBottom:\"0px\",\n                    padding:\"10px\",\n                    display:\"flex\",\n                    flexDirection:\"column\"\n                }}>\n                    <span style={{fontFamily:\"Roboto\",color:darkerTextColor,fontSize:\"14px\"}}>S - Dark</span>\n                    <span style={{fontFamily:\"Roboto\",color:darkerTextColor,fontWeight:\"700\",fontSize:\"18px\",textTransform:\"lowercase\"}}>{darkerColor}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SecondaryDisplay;","import React from 'react'\nimport PrimaryDisplay from './PrimaryDisplay';\nimport SecondaryDisplay from './SecondaryDisplay';\n\nconst ColorPreviews = () => {\n    return (\n        <div style={{display:\"flex\",flexDirection:\"row\",backgroundColor:\"white\"}}>\n            <PrimaryDisplay></PrimaryDisplay>\n            <SecondaryDisplay></SecondaryDisplay>\n        </div>\n    )\n}\n\nexport default ColorPreviews;","import { createContext } from 'react';\n\nconst FormContext = createContext();\n\nexport default FormContext;","import React, { useContext } from 'react'\nimport FormContext from '../FormContext'\nimport Radium from 'radium'\nimport ColorPickerContext from './ColorPickerContext'\nimport ColorLensOutlinedIcon from '@material-ui/icons/ColorLensOutlined';\n\nconst buttonStyle = {\n    fontFamily:\"Google Sans,Roboto,Arial,sans-serif\",\n    display:\"flex\",\n    flexDirection:\"row\",\n    borderRadius:\"4px\",\n    cursor:\"pointer\",\n    alignItems:\"center\",\n    transition:\".2s\",\n    margin:\"3px\",\n    justifyContent:\"center\",\n    padding:\"10px\",\n    transition:\"border 280ms  cubic-bezier(.4,0,.2,1) ,box-shadow 280ms cubic-bezier(.4,0,.2,1),background-color 280ms cubic-bezier(.4,0,.2,1)\",\n    // boxShadow:\"rgb(0 0 0 / 13%) 0px 3.2px 7.2px 0px, rgb(0 0 0 / 11%) 0px 0.6px 1.8px 0px\",\n    // boxShadow:\"rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px\",\n    backgroundColor:\"white\",\n    // backgroundImage:\"linear-gradient(to bottom, #ff6e7f 0%, white 100%)\",\n    ':hover':{\n        backgroundColor:\"whitesmoke\",\n        // boxShadow:\"0 1px 3px 0 rgb(60 64 67 / 30%), 0 4px 8px 3px rgb(60 64 67 / 15%)\",\n\n        // transform:\"scale(1.02)\",\n        // boxShadow:\"rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px\",\n    }\n}\n\nconst RadiumCurrentColorDisplay = (porps) => {\n    const formContext = useContext(FormContext)\n    const colorPickerContext = useContext(ColorPickerContext)\n    return (\n        <div style={buttonStyle} onClick={colorPickerContext.handleOpen}>\n            <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\"}}>\n                <ColorLensOutlinedIcon style={{height:\"38px\",width:\"38px\",color:\"darkgray\"}}></ColorLensOutlinedIcon>\n                {/* <span style={{marginLeft:\"4px\"}}>Form Colors</span> */}\n            </div>\n            <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\"}}>\n            <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",marginLeft:\"8px\"}}>\n                <span style={{fontFamily:\"Roboto\",fontSize:\"14px\"}}>Primary - </span>\n                <div style={{height:\"32px\",width:\"32px\",borderRadius:\"50%\",backgroundColor:formContext.form.custom_color_primary,marginLeft:\"8px\"}}>\n                </div>\n            </div>\n            <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",marginLeft:\"8px\"}}>\n                <span style={{fontFamily:\"Roboto\",fontSize:\"14px\"}}>Secondary - </span>\n                <div style={{height:\"32px\",width:\"32px\",borderRadius:\"50%\",backgroundColor:formContext.form.custom_color_secondary,marginLeft:\"8px\"}}>   \n                </div>\n            </div>\n            </div>\n        </div>\n    )\n}\n\nconst CurrentColorDisplay= Radium(RadiumCurrentColorDisplay);\n\nexport default CurrentColorDisplay","const palette = [{\n    name: \"Red\",\n    hexes: [\"#FFEBEE\", \"#FFCDD2\", \"#EF9A9A\", \"#E57373\", \"#EF5350\", \"#F44336\", \"#E53935\", \"#D32F2F\", \"#C62828\", \"#B71C1C\", \"#FF8A80\", \"#FF5252\", \"#FF1744\", \"#D50000\"]\n}, {\n    name: \"Pink\",\n    hexes: [\"#FCE4EC\", \"#F8BBD0\", \"#F48FB1\", \"#F06292\", \"#EC407A\", \"#E91E63\", \"#D81B60\", \"#C2185B\", \"#AD1457\", \"#880E4F\", \"#FF80AB\", \"#FF4081\", \"#F50057\", \"#C51162\"]\n}, {\n    name: \"Purple\",\n    hexes: [\"#F3E5F5\", \"#E1BEE7\", \"#CE93D8\", \"#BA68C8\", \"#AB47BC\", \"#9C27B0\", \"#8E24AA\", \"#7B1FA2\", \"#6A1B9A\", \"#4A148C\", \"#EA80FC\", \"#E040FB\", \"#D500F9\", \"#AA00FF\"]\n}, {\n    name: \"Deep Purple\",\n    hexes: [\"#EDE7F6\", \"#D1C4E9\", \"#B39DDB\", \"#9575CD\", \"#7E57C2\", \"#673AB7\", \"#5E35B1\", \"#512DA8\", \"#4527A0\", \"#311B92\", \"#B388FF\", \"#7C4DFF\", \"#651FFF\", \"#6200EA\"]\n}, {\n    name: \"Indigo\",\n    hexes: [\"#E8EAF6\", \"#C5CAE9\", \"#9FA8DA\", \"#7986CB\", \"#5C6BC0\", \"#3F51B5\", \"#3949AB\", \"#303F9F\", \"#283593\", \"#1A237E\", \"#8C9EFF\", \"#536DFE\", \"#3D5AFE\", \"#304FFE\"]\n}, {\n    name: \"Blue\",\n    hexes: [\"#E3F2FD\", \"#BBDEFB\", \"#90CAF9\", \"#64B5F6\", \"#42A5F5\", \"#2196F3\", \"#1E88E5\", \"#1976D2\", \"#1565C0\", \"#0D47A1\", \"#82B1FF\", \"#448AFF\", \"#2979FF\", \"#2962FF\"]\n}, {\n    name: \"Light Blue\",\n    hexes: [\"#E1F5FE\", \"#B3E5FC\", \"#81D4FA\", \"#4FC3F7\", \"#29B6F6\", \"#03A9F4\", \"#039BE5\", \"#0288D1\", \"#0277BD\", \"#01579B\", \"#80D8FF\", \"#40C4FF\", \"#00B0FF\", \"#0091EA\"]\n}, {\n    name: \"Cyan\",\n    hexes: [\"#E0F7FA\", \"#B2EBF2\", \"#80DEEA\", \"#4DD0E1\", \"#26C6DA\", \"#00BCD4\", \"#00ACC1\", \"#0097A7\", \"#00838F\", \"#006064\", \"#84FFFF\", \"#18FFFF\", \"#00E5FF\", \"#00B8D4\"]\n}, {\n    name: \"Teal\",\n    hexes: [\"#E0F2F1\", \"#B2DFDB\", \"#80CBC4\", \"#4DB6AC\", \"#26A69A\", \"#009688\", \"#00897B\", \"#00796B\", \"#00695C\", \"#004D40\", \"#A7FFEB\", \"#64FFDA\", \"#1DE9B6\", \"#00BFA5\"]\n}, {\n    name: \"Green\",\n    hexes: [\"#E8F5E9\", \"#C8E6C9\", \"#A5D6A7\", \"#81C784\", \"#66BB6A\", \"#4CAF50\", \"#43A047\", \"#388E3C\", \"#2E7D32\", \"#1B5E20\", \"#B9F6CA\", \"#69F0AE\", \"#00E676\", \"#00C853\"]\n}, {\n    name: \"Light Green\",\n    hexes: [\"#F1F8E9\", \"#DCEDC8\", \"#C5E1A5\", \"#AED581\", \"#9CCC65\", \"#8BC34A\", \"#7CB342\", \"#689F38\", \"#558B2F\", \"#33691E\", \"#CCFF90\", \"#B2FF59\", \"#76FF03\", \"#64DD17\"]\n}, {\n    name: \"Lime\",\n    hexes: [\"#F9FBE7\", \"#F0F4C3\", \"#E6EE9C\", \"#DCE775\", \"#D4E157\", \"#CDDC39\", \"#C0CA33\", \"#AFB42B\", \"#9E9D24\", \"#827717\", \"#F4FF81\", \"#EEFF41\", \"#C6FF00\", \"#AEEA00\"]\n}, {\n    name: \"Yellow\",\n    hexes: [\"#FFFDE7\", \"#FFF9C4\", \"#FFF59D\", \"#FFF176\", \"#FFEE58\", \"#FFEB3B\", \"#FDD835\", \"#FBC02D\", \"#F9A825\", \"#F57F17\", \"#FFFF8D\", \"#FFFF00\", \"#FFEA00\", \"#FFD600\"]\n}, {\n    name: \"Amber\",\n    hexes: [\"#FFF8E1\", \"#FFECB3\", \"#FFE082\", \"#FFD54F\", \"#FFCA28\", \"#FFC107\", \"#FFB300\", \"#FFA000\", \"#FF8F00\", \"#FF6F00\", \"#FFE57F\", \"#FFD740\", \"#FFC400\", \"#FFAB00\"]\n}, {\n    name: \"Orange\",\n    hexes: [\"#FFF3E0\", \"#FFE0B2\", \"#FFCC80\", \"#FFB74D\", \"#FFA726\", \"#FF9800\", \"#FB8C00\", \"#F57C00\", \"#EF6C00\", \"#E65100\", \"#FFD180\", \"#FFAB40\", \"#FF9100\", \"#FF6D00\"]\n}, {\n    name: \"Deep Orange\",\n    hexes: [\"#FBE9E7\", \"#FFCCBC\", \"#FFAB91\", \"#FF8A65\", \"#FF7043\", \"#FF5722\", \"#F4511E\", \"#E64A19\", \"#D84315\", \"#BF360C\", \"#FF9E80\", \"#FF6E40\", \"#FF3D00\", \"#DD2C00\"]\n}, {\n    name: \"Brown\",\n    hexes: [\"#EFEBE9\", \"#D7CCC8\", \"#BCAAA4\", \"#A1887F\", \"#8D6E63\", \"#795548\", \"#6D4C41\", \"#5D4037\", \"#4E342E\", \"#3E2723\"]\n}, {\n    name: \"Grey\",\n    hexes: [\"#FAFAFA\", \"#F5F5F5\", \"#EEEEEE\", \"#E0E0E0\", \"#BDBDBD\", \"#9E9E9E\", \"#757575\", \"#616161\", \"#424242\", \"#212121\"]\n}, {\n    name: \"Blue Grey\",\n    hexes: [\"#ECEFF1\", \"#CFD8DC\", \"#B0BEC5\", \"#90A4AE\", \"#78909C\", \"#607D8B\", \"#546E7A\", \"#455A64\", \"#37474F\", \"#263238\"]\n}]\n\nexport default palette;","import React, { useState, useEffect, useContext} from 'react'\nimport chroma from 'chroma-js'\nimport ColorHexRow from './ColorHexRow'\nimport ColorPickerContext from './ColorPickerContext'\nimport ColorPreviews from './ColorPreviews'\nimport { makeStyles } from '@material-ui/core/styles';\nimport PaletteIcon from '@material-ui/icons/Palette';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Button } from '@material-ui/core'\nimport Cookies from 'js-cookie';\nimport {useParams} from 'react-router-dom'\nimport FormContext from '../FormContext'\nimport CurrentColorDispaly from './CurrentColorDisplay'\nimport palette from './palette'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  }));\n\nconst ColorPickerGrid = (props) => {\n    const colorPickerContext = useContext(ColorPickerContext)\n    return (\n        <div style={{display:\"flex\",flexDirection:\"column\"}}>\n            <div style={{display:\"flex\",flexDirection:\"row\",width:\"100%\",justifyContent:\"flex-end\"}}>\n                <Button onClick={colorPickerContext.handleSaveColors} style={{marginBottom:\"10px\"}} variant={\"outlined\"}>Save Form Colors</Button>\n                <Button onClick={colorPickerContext.handleClose} style={{marginBottom:\"10px\",marginLeft:\"8px\"}} variant={\"outlined\"}>Cancel</Button>\n            </div>\n            <div style={{display:\"flex\",flexDirection:\"row\"}}>\n                <div style={{display:\"flex\",flexDirection:\"column\"}}>\n                    {palette.map((color,index)=>{\n                        return (\n                            <ColorHexRow colorName={color.name} hexes={color.hexes}></ColorHexRow>\n                        )\n                    })}\n                </div>\n                <ColorPreviews></ColorPreviews>\n            </div>\n        </div>\n    )\n}\n\nexport default ColorPickerGrid;","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport ColorPickerGrid from './ColorPickerGrid';\nimport ColorPickerContext from './ColorPickerContext';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    outline:\"none\"\n  },\n}));\n\nexport default function ColorPickerGridModal() {\n  const classes = useStyles();\n\n  const colorPickerContext = useContext(ColorPickerContext)\n\n  return (\n    <div>\n      <Modal\n        className={classes.modal}\n        open={colorPickerContext.modalOpen}\n        onClose={colorPickerContext.handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n          <div className={classes.paper}>\n            <ColorPickerGrid></ColorPickerGrid>\n          </div>\n      </Modal>\n    </div>\n  );\n}","import React, { useState, useEffect, useContext} from 'react'\nimport chroma from 'chroma-js'\nimport ColorHexRow from './ColorHexRow'\nimport ColorPickerContext from './ColorPickerContext'\nimport ColorPreviews from './ColorPreviews'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Cookies from 'js-cookie';\nimport {useParams} from 'react-router-dom'\nimport FormContext from '../FormContext'\nimport CurrentColorDispaly from './CurrentColorDisplay'\nimport ColorPickerGrid from './ColorPickerGrid'\nimport ColorPickerGridModal from './ColorPickerGridModal'\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      paper: {\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        outline:\"none\"\n      },\n  }));\n\n\nconst ColorPicker = (props) => {\n    const classes = useStyles();\n    const [selected,setSelected] = useState({index:\"\",colorName:\"\"})\n    const [primary,setPrimary] =useState(props.primary ? props.primary : \"#FAFAFA\")\n    const [secondary,setSecondary]=useState(props.secondary ? props.secondary : \"#FAFAFA\")\n    const [activeColorType,setActiveColorType]=useState('primary')\n    const [savingForm,setSavingForm] = useState(false)\n    const [expanded,setExpanded] = useState(false)\n    const [modalOpen,setModalOpen] = useState(false)\n    const handleSaveColors = () => {\n        setSavingForm(true)\n    }\n\n    const handleOpen = () => {\n        setModalOpen(true);\n    };\n    \n    const handleClose = () => {\n        setModalOpen(false);\n    };\n\n    useEffect(()=>{\n        if (props.secondary) setSecondary(props.secondary)\n        if (props.primary) setPrimary(props.primary)\n    },[props])\n\n    const {id} = useParams()\n\n    const formContext = useContext(FormContext)\n\n    useEffect(() => {\n        const saveForm = async () => {\n            const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n            const colorObj = {\n                primary_color:primary,\n                primary_dark:chroma(primary).darken().hex(),\n                primary_light:chroma(primary).darken().hex(),\n                secondary_light:chroma(secondary).darken().hex(),\n                secondary_dark:chroma(secondary).darken().hex(),\n                secondary_color:secondary}\n            const jsonForm = JSON.stringify(colorObj)\n            const response = await fetch(`/api/forms/update-form-colors/${id}`,{\n                headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": csrfToken,\n                },\n                method:\"PATCH\",\n                body: jsonForm\n            })\n            const data = await response.json();\n            formContext.setForm(data.form)\n            setModalOpen(false)\n            setSavingForm(false)\n      }\n      if (savingForm) {\n        saveForm()\n      }\n    }\n    ,[savingForm])\n    return (\n        <ColorPickerContext.Provider \n            value={{\n                modalOpen, \n                handleOpen,\n                handleSaveColors,\n                selected,\n                setSelected,\n                primary,\n                setPrimary,\n                secondary,\n                setSecondary,\n                activeColorType,\n                setActiveColorType,\n                handleClose\n            }}>\n                    <CurrentColorDispaly></CurrentColorDispaly>\n                    <div>\n                        <Modal\n                            className={classes.modal}\n                            open={modalOpen}\n                            onClose={handleClose}\n                            BackdropComponent={Backdrop}\n                            BackdropProps={{\n                            timeout: 500,\n                            }}\n                        >\n                            <div className={classes.paper}>\n                                <ColorPickerGrid></ColorPickerGrid>\n                            </div>\n                        </Modal>\n                    </div>\n        </ColorPickerContext.Provider>\n    )\n}\n\nexport default ColorPicker;","import React, { useEffect,useState } from 'react'\nimport Radium from 'radium'\nimport { TextField } from '@material-ui/core'\nimport { Grid, Container, Card, InputBase, CircularProgress, Input, TextareaAutosize } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    formTitleText: {\n      fontSize:\"38px\"\n    },\n    formNameText: {\n      padding: theme.spacing(1),\n    },\n    helperText: {\n        textAlign:\"center\",\n    },\n    formLabelProps:{\n        paddingLeft:\"10px\"\n    },\n    formInputProps:{\n        cursor:\"pointer\"\n    }\n  }));\n\nconst buttonStyle = {\n    fontFamily:\"Google Sans,Roboto,Arial,sans-serif\",\n    display:\"flex\",\n    flexDirection:\"row\",\n    borderRadius:\"4px\",\n    cursor:\"pointer\",\n    alignItems:\"center\",\n    transition:\".2s\",\n    transition:\"border 280ms  cubic-bezier(.4,0,.2,1) ,box-shadow 280ms cubic-bezier(.4,0,.2,1),background-color 280ms cubic-bezier(.4,0,.2,1)\",\n    // boxShadow:\"rgb(0 0 0 / 13%) 0px 3.2px 7.2px 0px, rgb(0 0 0 / 11%) 0px 0.6px 1.8px 0px\",\n    // boxShadow:\"rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px\",\n    backgroundColor:\"white\",\n    // backgroundImage:\"linear-gradient(to bottom, #ff6e7f 0%, white 100%)\",\n    ':hover':{\n        // backgroundColor:\"gainsboro\",\n        // boxShadow:\"0 1px 3px 0 rgb(60 64 67 / 30%), 0 4px 8px 3px rgb(60 64 67 / 15%)\",\n        backgroundColor:\"whitesmoke\"\n        // transform:\"scale(1.02)\",\n        // boxShadow:\"rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px\",\n    }\n}\n\n\nconst RadiumFormNameField = ({formName,handleEdit}) => {\n    const classes = useStyles()\n        return (\n        <div style={buttonStyle} onClick={handleEdit}>\n            {/* <div>\n                {formName ? formName : \"\"}\n            </div> */}\n            <TextField  \n                    value={formName}\n                    required={false}\n                    multiline\n                    rows={3}\n                    fullWidth\n                    variant={\"outlined\"}\n                    rowsMax={Infinity}\n                    label=\"Form Intro Text\"\n                    placeholder=\"Enter intro text for your form...\"\n                    helperText=\"This optional text appears at the top of the form.\"\n                    size=\"small\"\n                    style={{paddingLeft:\"10px\",paddingRight:\"10px\"}}\n                    margin=\"normal\"\n                    InputProps={{\n                        className:classes.formInputProps\n                    }}\n                    InputLabelProps={{\n                        shrink: true,\n                        className:classes.formLabelProps\n                    }}\n                    FormHelperTextProps={{\n                            className: classes.helperText\n                                    }}\n                />\n        </div>\n    )\n}\n\nconst FormNameFieldDisplay = Radium(RadiumFormNameField);\n\nexport default FormNameFieldDisplay","import { Button, TextField } from '@material-ui/core';\nimport { Grid, Container, Card, InputBase, CircularProgress, Input, TextareaAutosize } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router';\nimport FormIntroTextFieldDisplay from './FormIntroTextFieldDisplay';\nimport Cookies from 'js-cookie'\n\nconst useStyles = makeStyles((theme) => ({\n    formTitleText: {\n      fontSize:\"38px\"\n    },\n    formNameText: {\n      padding: theme.spacing(1),\n    },\n    helperText: {\n        textAlign:\"center\",\n    },\n    formLabelProps:{\n        paddingLeft:\"10px\"\n    }\n  }));\n\nconst GreenColorButton = withStyles((theme) => ({\nroot: {\n    color: \"white\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\",\n    outline:\"none\",\n    margin: \"4px\",\n    backgroundColor:\"#a9a9a9\",\n    '&:hover': {\n        backgroundColor: \"yellowgreen !important\",\n    }\n},\n}))(Button);\n\nconst RedColorButton = withStyles((theme) => ({\n    root: {\n        color: \"white\",\n        paddingRight: \"10px\",\n        paddingLeft: \"10px\",\n        outline:\"none\",\n        margin: \"4px\",\n        backgroundColor:\"#a9a9a9\",\n        '&:hover': {\n            backgroundColor: \"tomato !important\",\n        }\n    },\n    }))(Button);\n\n\nexport default function FormIntroTextField(props) {\n    const classes = useStyles();\n    const [edit,setEdit]=useState(false)\n    const [name,setName] = useState(\"\")\n    const [formName,setFormName] = useState(\"\")\n    const [savingForm,setSavingForm] =useState(false)\n    const [currentName,setCurrentName] = useState(\"\")\n\n    useEffect(()=>{\n        setName(props.formName)\n        setCurrentName(props.formName)\n    },[props])\n\n    const handleSave = () => {\n        setSavingForm(true)\n    }\n\n    const handleCancel = () => {\n        setName(currentName)\n        setEdit(false)\n    }\n\n    const {id} = useParams()\n\n    useEffect(() => {\n        const saveForm = async (formName) => {\n            const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n            const nameObj = {form_name:name}\n            const jsonForm = JSON.stringify(nameObj)\n            const response = await fetch(`/api/forms/update-form-intro-text/${id}`,{\n                headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": csrfToken,\n                },\n                method:\"PATCH\",\n                body: jsonForm\n            })\n            const data = await response.json();\n            setCurrentName(data.form.form_intro_text)\n            setSavingForm(false)\n            // setCreatedForm(data.form)\n      }\n      if (savingForm) {\n        saveForm({form_name:name})\n      }\n    }\n  ,[savingForm])\n\n    return (\n        <>\n            <div className={'form-field'} style={{display:'flex',flexDirection:'row',justifyContent:\"center\"}}>\n                <form \n                    style={{width:\"100%\",maxWidth:\"750px\"}}\n                    onSubmit={(e)=>{\n                    e.preventDefault()\n                    handleSave()\n                    }\n                }>\n                <TextField \n                    required={false}\n                    multiline\n                    fullWidth\n                    rows={3}\n                    variant={\"outlined\"}\n                    rowsMax={Infinity}\n                    onChange={(e)=>setName(e.target.value)} \n                    value={name}\n                    label=\"Form Intro Text\"\n                    placeholder=\"Enter intro text for your form...\"\n                    helperText=\"This optional text appears at the top of the form.\"\n                    size=\"small\"\n                    style={{paddingLeft:\"10px\",paddingRight:\"10px\"}}\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                        className:classes.formLabelProps\n                    }}\n                    FormHelperTextProps={{\n                            className: classes.helperText\n                                    }}\n                />\n                {\n                    currentName === name\n                    ?\n                    <></>\n                    :\n                    <div style={{display:'flex',flexDirection:'row',justifyContent:\"flex-end\"}}>\n                    <GreenColorButton fullWidth={false} onClick={handleSave}>\n                        save\n                    </GreenColorButton>\n                    <RedColorButton fullWidth={false} onClick={handleCancel}>\n                        cancel\n                    </RedColorButton>\n                </div>}\n                </form>\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport langs from 'langs'\nimport LanguageIcon from '@material-ui/icons/Language'\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width:\"100%\",\n    alignSelf:\"center\",\n    \"&:hover\":{\n      backgroundColor:\"whitesmoke\"\n    }\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n  selectInputProps :{\n    background:\"white\"\n  }\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = langs.names();\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport default function FormTranslationsField() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    setPersonName(event.target.value);\n  };\n\n  const handleChangeMultiple = (event) => {\n    const { options } = event.target;\n    const value = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    setPersonName(value);\n  };\n\n  return (\n      <FormControl className={classes.formControl} variant=\"outlined\">\n        <InputLabel id=\"demo-mutiple-chip-label\">Provided Translations</InputLabel>\n        <Select\n          variant=\"outlined\"\n          labelId=\"demo-mutiple-chip-label\"\n          id=\"demo-mutiple-chip\"\n          multiple\n          fullWidth\n          value={personName}\n          onChange={handleChange}\n          input={<Input id=\"select-multiple-chip\" />}\n          renderValue={(selected) => (\n            <div className={classes.chips}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} className={classes.chip} />\n              ))}\n            </div>\n          )}\n          MenuProps={MenuProps}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Grid, Container, Card, InputBase, TextField, CircularProgress, Input, TextareaAutosize } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport FormNameFieldDisplay from './FormNameFieldDisplay';\nimport FormNameField from './FormNameField';\nimport FormTitleField from './FormTitleField';\nimport chroma from 'chroma-js'\nimport ColorPicker from '../color-picker/ColorPicker';\nimport FormIntroTextField from './FormIntroTextField'\nimport FormTranslationsField from './FormTranslationsField';\n\nconst useStyles = makeStyles((theme) => ({\n    formTitleText: {\n      fontSize:\"38px\"\n    },\n    formNameText: {\n      padding: theme.spacing(1),\n    },\n    helperText: {\n        textAlign:\"center\",\n    }\n  }));\n\n\nconst FormHeader = ({form}) => {\n    const classes = useStyles();\n    const [editHeader,setEditHeader] = useState(false)\n    const [formName,setFormName] =useState(\"\")\n    const [formTitle,setFormTitle]=useState(\"\")\n    const [formIntroText,setFormIntroText]=useState(\"\")\n    const [primaryColor,setPrimaryColor] = useState(\"\")\n    const [secondaryColor,setSecondaryColor] =useState(\"\")\n\n    useEffect(()=>{\n        setFormName(form.form_name)\n        setFormTitle(form.form_title)\n        setFormIntroText(form.form_intro_text)\n        setSecondaryColor(form.custom_color_secondary)\n        setPrimaryColor(form.custom_color_primary)\n    },[form])\n    \n\n    const editHeaderHandler = () => {\n        setEditHeader(true)\n    }\n\n    const handleFormNameInput = (e) => {\n        setFormName(e.target.value)\n    }\n\n    const handleFormTitleInput = (e) => {\n        setFormTitle(e.target.value)\n    }\n\n    const lighter = chroma(\"#7986cb\").brighten().hex()\n    const darken = chroma(\"#7986cb\").darken().hex()\n\n    return (\n        <>\n            <div className=\"form-header__main form-section\">\n                <div className=\"form-header-stripe\"></div>\n                    {/* <FormWhiteLabelField/>\n                    <FormStartButtonVisibileToField/> */}\n                    {/* <FormNameField/> */}\n                    {/* <FormTitleField/>\n                    <FormIntroTextField/>\n                    <FormCustomColorPrimaryField/>\n                    <FormCustomColorSecondaryField/> */}\n                    <FormNameField formName={formName}/>\n                    <FormTitleField formTitle={formTitle}/>\n                    <FormIntroTextField formName={formIntroText}/>\n                    <ColorPicker secondary={secondaryColor} primary={primaryColor}></ColorPicker>\n                    <FormTranslationsField></FormTranslationsField>\n                        {/* <TextField\n                            label=\"Form Name\"\n                            placeholder=\"Enter a name for your form...\"\n                            helperText=\"This should be fairly short but also descriptive. Forms are displayed by their form name along other forms in drop-down menus and other lists.\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            value={formName || \"\"}\n                            onChange={(e)=>handleFormNameInput(e)}\n                            margin=\"normal\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            FormHelperTextProps={{\n                                    className: classes.helperText\n                                }}\n                        />\n                        <TextField\n                            label=\"Form Title\"\n                            placeholder=\"Untitled Form\"\n                            helperText=\"Form titles will display at the top of the page when a form is a open. A form's title can be the same as the form's name or a slightly longer version of it.\"\n                            value={formTitle || \"\"}\n                            onChange={(e)=>handleFormTitleInput(e)}\n                            margin=\"normal\"\n                            variant=\"filled\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                classes: {\n                                  input: classes.formTitleText,\n                                },\n                              }}\n                            FormHelperTextProps={{\n                                className: classes.helperText\n                            }}\n                        />\n                        <p className=\"MuiFormHelperText-root\">\n                            Form Description\n                        </p>\n                        <TextareaAutosize\n                            style={{\n                                width:\"100%\",\n                                border:\"1px solid #dadce0\",\n                                borderRadius:\"4px\"\n                            }}\n                            rowsMin={2}\n                            aria-label=\"maximum height\"\n                            placeholder=\"Maximum 4 rows\"\n                            defaultValue=\"Form Description\"\n                        />\n                        <p className=\"MuiFormHelperText-root\">\n                            This optional text appears at the top of the form along with form title.\n                        </p> */}\n                    </div>\n        </>\n    )\n}\nexport default FormHeader;","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router'\nimport FormBody from './FormBody';\nimport FormHeader from './form-header/FormHeader';\nimport FormContext from './FormContext';\nimport FormSections from './sections/FormSections';\n\n\nconst Form = (props)=>{\n    const [form,setForm] = useState({})\n    let {id} = useParams();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        async function fetchData() {\n\n            const response = await fetch(`/api/forms/${id}`);\n            const responseData = await response.json();\n            setForm(responseData.form);\n        }\n        fetchData();\n    }, []);\n\n    return (\n        <FormContext.Provider value={{setForm,form}}>\n            <div className=\"form-editor__main\">\n                <FormHeader form={form}></FormHeader>\n                <FormSections />\n                {/* <FormSections></FormSections> */}\n            </div>\n        </FormContext.Provider>\n    )\n}\n\nexport default Form;","import React from 'react'\nimport Radium from 'radium'\n\nconst buttonStyle = {\n    fontFamily:\"Google Sans,Roboto,Arial,sans-serif\",\n    display:\"flex\",\n    flexDirection:\"row\",\n    borderRadius:\"4px\",\n    cursor:\"pointer\",\n    alignItems:\"center\",\n    transition:\".2s\",\n    border:\"1px solid #dadce0\",\n    margin:\"3px\",\n    transition:\"border 280ms  cubic-bezier(.4,0,.2,1) ,box-shadow 280ms cubic-bezier(.4,0,.2,1),background-color 280ms cubic-bezier(.4,0,.2,1)\",\n    // boxShadow:\"rgb(0 0 0 / 13%) 0px 3.2px 7.2px 0px, rgb(0 0 0 / 11%) 0px 0.6px 1.8px 0px\",\n    // boxShadow:\"rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px\",\n    backgroundColor:\"white\",\n    // backgroundImage:\"linear-gradient(to bottom, #ff6e7f 0%, white 100%)\",\n    ':hover':{\n        // backgroundColor:\"gainsboro\",\n        boxShadow:\"0 1px 3px 0 rgb(60 64 67 / 30%), 0 4px 8px 3px rgb(60 64 67 / 15%)\",\n\n        // transform:\"scale(1.02)\",\n        // boxShadow:\"rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px\",\n    }\n}\n\n\nconst SubdomainButton = (props) => {\n    return (\n        <div style={buttonStyle}>\n            <div style={{\n                color:\"black\",\n                justifyContent:\"center\",\n                // borderBottom:\"1px solid rgb(232,232,232)\",\n                alignItems:\"center\",\n                width:\"100%\",\n                fontSize:\"14px\",\n                display:\"flex\",\n                flexDirection:\"row\",\n                fontFamily:\"Google Sans,Roboto,Arial,sans-serif\",\n                letterSpacing:\"1px\",\n                background:\"transparent\",\n                borderTopLeftRadius:\"4px\",\n                borderTopRightRadius:\"4px\"\n                }}>\n                {props.subdomain.subdomain}\n            </div>\n            <div style={{\n                width:\"100%\",\n                justifyContent:\"center\",\n                display:\"flex\",\n                flexDirection:\"column\",\n                backgroudColor:\"white\",\n                fontWeight:\"lighter\",\n                alignItems:\"center\",\n                fontSize:\"28px\",\n                color:\"black\"\n            }}>\n                    {props.subdomain.id}\n            </div>\n        </div>\n    )\n}\n\nconst Subdomain = Radium(SubdomainButton);\n\nexport default Subdomain","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams,\n    useRouteMatch,\n    NavLink\n  } from \"react-router-dom\";\n\nimport SubdomainCard from './SubdomainCard';\n\nfunction SubdomainList (props) {\n    const [subdomains, setSubdomains] = useState([]);\n    let { path, url } = useRouteMatch();\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch('/api/subdomains/');\n            const data = await response.json();\n            setSubdomains(data.subdomains);\n        }\n        fetchData();\n    }, []);\n\n    const subdomainComponents = subdomains.map((subdomain) => \n        <NavLink to={`/subdomains/${subdomain.id}`}>\n            <SubdomainCard key={subdomain.id} subdomain={subdomain}/>\n        </NavLink>)\n    \n    return (\n        <>\n            <h4>Subdomains: </h4>\n            {subdomainComponents}\n        </>\n        );\n}\n\nexport default SubdomainList;","import React from 'react'\nimport Radium from 'radium'\n\nconst buttonStyle = {\n    fontFamily:\"Google Sans,Roboto,Arial,sans-serif\",\n    display:\"flex\",\n    flexDirection:\"row\",\n    borderRadius:\"4px\",\n    cursor:\"pointer\",\n    alignItems:\"center\",\n    transition:\".2s\",\n    border:\"1px solid #dadce0\",\n    margin:\"3px\",\n    transition:\"border 280ms  cubic-bezier(.4,0,.2,1) ,box-shadow 280ms cubic-bezier(.4,0,.2,1),background-color 280ms cubic-bezier(.4,0,.2,1)\",\n    // boxShadow:\"rgb(0 0 0 / 13%) 0px 3.2px 7.2px 0px, rgb(0 0 0 / 11%) 0px 0.6px 1.8px 0px\",\n    // boxShadow:\"rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px\",\n    backgroundColor:\"white\",\n    // backgroundImage:\"linear-gradient(to bottom, #ff6e7f 0%, white 100%)\",\n    ':hover':{\n        // backgroundColor:\"gainsboro\",\n        boxShadow:\"0 1px 3px 0 rgb(60 64 67 / 30%), 0 4px 8px 3px rgb(60 64 67 / 15%)\",\n\n        // transform:\"scale(1.02)\",\n        // boxShadow:\"rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px\",\n    }\n}\n\n\nconst FormCardButton = (props) => {\n    return (\n        <div style={buttonStyle}>\n            <div style={{\n                color:\"black\",\n                justifyContent:\"center\",\n                // borderBottom:\"1px solid rgb(232,232,232)\",\n                alignItems:\"center\",\n                width:\"100%\",\n                fontSize:\"14px\",\n                display:\"flex\",\n                flexDirection:\"row\",\n                fontFamily:\"Google Sans,Roboto,Arial,sans-serif\",\n                letterSpacing:\"1px\",\n                background:\"transparent\",\n                borderTopLeftRadius:\"4px\",\n                borderTopRightRadius:\"4px\"\n                }}>\n                {props.form.form_name}\n            </div>\n            <div style={{\n                width:\"100%\",\n                justifyContent:\"center\",\n                display:\"flex\",\n                flexDirection:\"column\",\n                backgroudColor:\"white\",\n                fontWeight:\"lighter\",\n                alignItems:\"center\",\n                fontSize:\"28px\",\n                color:\"black\"\n            }}>\n                    {props.form.form_title}\n            </div>\n        </div>\n    )\n}\n\nconst FormCard = Radium(FormCardButton);\n\nexport default FormCard","import React, { useEffect,useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Cookies from 'js-cookie'\nimport Fade from '@material-ui/core/Fade';\nimport { Redirect, useParams } from 'react-router';\nimport { TextField } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function NewFormModal(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState();\n    const [newFormName,setNewFormName] = useState(\"\")\n    const [creatingForm,setCreatingForm] =useState(false)\n    const [createdForm,setCreatedForm] =useState({})\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleNameInput = (e) => {\n        setNewFormName(e.target.value)\n    }\n\n    const handleCreateForm = () => {\n        if (newFormName) {\n            setCreatingForm(true)\n        }\n    }\n\n    //get subdomain_id for new form\n    let {id} = useParams()\n\n    useEffect(() => {\n        const createForm = async (form) => {\n            const csrfToken = Cookies.get(\"XSRF-TOKEN\")\n            const jsonForm = JSON.stringify(form)\n            const response = await fetch('/api/forms/create',{\n                headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-CSRF-TOKEN\": csrfToken,\n                },\n                method:\"POST\",\n                body: jsonForm\n            })\n            const data = await response.json();\n            setCreatingForm(false)\n            setCreatedForm(data.form)\n      }\n      if (creatingForm) {\n        createForm({subdomain_id:id,form_name:newFormName})\n      }\n    }\n  ,[creatingForm])\n\n  if (createdForm.id) {\n    return <Redirect to={`/forms/${createdForm.id}`}/>\n  }\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleOpen}>\n        Create Form\n      </button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">New Form</h2>\n            <TextField label=\"New Form Name\" onChange={(e)=>handleNameInput(e)} value={newFormName}></TextField>\n            <button onClick={handleCreateForm}>create new form</button>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams,\n    useRouteMatch,\n    NavLink\n  } from \"react-router-dom\";\n\nimport FormCard from './FormCard';\nimport NewFormModal from './NewFormModal';\n\nfunction SubdomainFormList (props) {\n    const [forms, setForms] = useState([]);\n    let { path, url } = useRouteMatch();\n    const [subdomain,setSubdomain] = useState({})\n    let {id} = useParams();\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch(`/api/subdomains/${id}/forms`);\n            const data = await response.json();\n            setForms(data.forms);\n            setSubdomain(data.subdomain);\n        }\n        fetchData();\n    }, []);\n\n    const formList = forms.map((form) => \n    <NavLink to={`/forms/${form.id}`}>\n        <FormCard key={form.id} form={form}/>\n    </NavLink>\n    )\n    return (\n        <>\n            <h3>\n                {subdomain.subdomain ? subdomain.subdomain : \"\"}\n            </h3>\n                <NewFormModal/>\n            {formList}\n        </>\n        );\n}\n\nexport default SubdomainFormList;","import React from 'react';\nimport { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\nimport Form from './components/Form'\nimport SubdomainList from './components/SubdomainList';\nimport SubdomainFormList from './components/SubdomainFormList';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <div className={\"nav-bar\"}> \n                <div style={{display:\"flex\",flexDirection:\"row\"}}>\n                    <NavLink style={{ textDecoration: 'none' }} to=\"/\" activeclass=\"active\">\n                        <div className={\"nav-bar-button\"}>\n                            Home\n                        </div>\n                    </NavLink>\n                    <NavLink style={{ textDecoration: 'none' }} to=\"/subdomains\" activeclass=\"active\">\n                        <div className={\"nav-bar-button\"}>\n                            Subdomains\n                        </div>\n                    </NavLink>\n                </div>\n        </div>\n        <Switch>\n            <Route exact path=\"/\">\n                <h1>AB Form Builder</h1>\n            </Route>\n            <Route exact path=\"/subdomains\">\n                <SubdomainList></SubdomainList>\n            </Route>\n            <Route path=\"/subdomains/:id\">\n                <SubdomainFormList></SubdomainFormList>\n            </Route>\n            <Route exact path=\"/forms/:id\">\n                <Form></Form>\n            </Route>\n        </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { createStore, compose, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport forms from './forms';\n\nconst rootReducer = combineReducers({\n  forms\n});\n\nlet storeEnhancer;\n\nif (process.env.NODE_ENV !== 'production') {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  storeEnhancer = composeEnhancers(applyMiddleware(thunk));\n} else {\n  storeEnhancer = applyMiddleware(thunk);\n}\n\nexport default function configureStore(initialState) {\n  return createStore(\n    rootReducer,\n    initialState,\n    storeEnhancer\n  )\n}","const SET_FORM = 'forms/SET_FORM'\n\n\nexport const loadForm = (id) => async (dispatch) => {\n    const res = await fetch(`/api/forms/${id}`)\n    if (res.ok) {\n        const data = await res.json()\n        dispatch(setForm(data))\n    }\n}\n\nexport const setForm = (form) => {\n    return {\n        type: SET_FORM,\n        form\n    }\n}\n\nexport default function formsReducer(state = {form: {}} ,action) {\n    let newState = Object.assign({},state);\n    switch (action.type){\n        case SET_FORM:\n            newState.form = action.form\n            return newState\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport configureStore from './store/configureStore'\n\nconst store = configureStore();\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}